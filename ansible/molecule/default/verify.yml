---
- name: Verify
  hosts: all
  tasks:
    - name: Check that traefik is deployed
      command: "docker service inspect traefik_traefik"
      changed_when: False

    - name: Check that example_app is deployed
      command: "docker service inspect example_app_helloworld"
      changed_when: False

    # Unfortunately this test does not work on Travis :-(
    # > "stderr_lines": ["*   Trying 127.0.0.1...", "* TCP_NODELAY set", "* Connected to 127.0.0.1 (127.0.0.1) port 443 (#0)", "* ALPN, offering h2", "* ALPN, offering http/1.1", "* successfully set certificate verify locations:", "*   CAfile: /etc/ssl/certs/ca-certificates.crt", "  CApath: /etc/ssl/certs", "} [5 bytes data]", "* TLSv1.3 (OUT), TLS handshake, Client hello (1):", "} [512 bytes data]", "* OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to 127.0.0.1:443 ", "* Closing connection 0"]
    # > it may be because of the Docker-in-Docker-in-Docker...
    # > so we test traefik in HTTP instead, and container execution
    #
    # - name: Check that example_app is working
    #   command: 'curl -k -I --fail --silent -H "Host: yourcompany.com" https://127.0.0.1/'
    #   changed_when: False
    #   args:
    #     warn: False

    # This one neither :-(
    # > rc #56
    #
    # - name: Check that traefik is working
    #   command: 'curl -I --fail --silent -H "Host: yourcompany.com" http://127.0.0.1/'
    #   changed_when: False
    #   args:
    #     warn: False

    - name: Check that 1 traefik container is running
      shell: |
        set -o pipefail
        {% raw %}docker container ps --filter "label=com.docker.swarm.service.name=traefik_traefik" --format "{{.ID}}" | wc -l{% endraw %} # noqa 206
      register: nb_traefik_containers
      changed_when: False
      failed_when: nb_traefik_containers.stdout != "1"
      args:
        warn: False
        executable: /bin/bash

    - name: Check that 2 example_app containers are running
      shell: |
        set -o pipefail
        {% raw %}docker container ps --filter "label=com.docker.swarm.service.name=example_app_helloworld" --format "{{.ID}}" | wc -l{% endraw %} # noqa 206
      register: nb_example_app_containers
      changed_when: False
      failed_when: nb_example_app_containers.stdout != "2"
      args:
        warn: False
        executable: /bin/bash
